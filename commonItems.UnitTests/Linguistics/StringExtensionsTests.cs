using commonItems.Linguistics;
using Xunit;

namespace commonItems.UnitTests.Linguistics;

public class StringExtensionsTests {
	[Theory]
	[InlineData("Verahram Qal'eh", "Verahrami")]
	[InlineData("Ad Pontem", "Pontan")]
	[InlineData("Cook Islands", "Cook")]
	[InlineData("Dominican Republic", "Dominican")]
	[InlineData("Soviet Union", "Soviet")]
	[InlineData("Scotland", "Scottish")]
	[InlineData("Lapland", "Lappish")]
	[InlineData("Finland", "Finnish")]
	[InlineData("England", "English")]
	[InlineData("Poland", "Polish")]
	[InlineData("Iceland", "Icelandic")]
	[InlineData("Switzerland", "Swiss")]
	[InlineData("Thailand", "Thai")]
	[InlineData("France", "French")]
	[InlineData("Lebanon", "Lebanese")]
	[InlineData("Nuremberg", "Nuremberger")]
	[InlineData("Hamburg", "Hamburger")]
	[InlineData("Indochina", "Indochinese")]
	[InlineData("Greece", "Greek")]
	[InlineData("Senegal", "Senegalese")]
	[InlineData("United Arab Emirates", "United Arab Emirati")]
	[InlineData("Denmark", "Danish")]
	[InlineData("Ghana", "Ghanaian")]
	[InlineData("Epirus", "Epirote")]
	[InlineData("Tajikistan", "Tajik")]
	[InlineData("Seychelles", "Seychellois")]
	[InlineData("Spain", "Spanish")]
	[InlineData("Pakistan", "Pakistani")]
	[InlineData("Cyprus", "Cypriote")]
	[InlineData("Ireland", "Irish")]
	[InlineData("Kazakhstan", "Kazakh")]
	[InlineData("Liechtenstein", "Liechtensteiner")]
	[InlineData("Great Britain", "Great British")]
	[InlineData("Antarctica", "Antarctic")]
	[InlineData("Sudan", "Sudanese")]
	[InlineData("Guiana", "Guianese")]
	[InlineData("Burma", "Burmese")]
	[InlineData("Slovenia", "Slovene")]
	[InlineData("Mayotte", "Mahoran")]
	[InlineData("New Zealand", "New Zealander")]
	[InlineData("Diocese", "Diocesan")]
	[InlineData("Vietnam", "Vietnamese")]
	[InlineData("Belarus", "Belarusian")]
	[InlineData("Guam", "Guamanian")]
	[InlineData("Laos", "Lao")]
	[InlineData("Mauritius", "Mauritian")]
	[InlineData("Bahrain", "Bahraini")]
	[InlineData("Wales", "Welsh")]
	[InlineData("Suriname", "Surinamese")]
	[InlineData("Kiribati", "Kiribati")]
	[InlineData("Madagascar", "Madagascan")]
	[InlineData("Macau", "Macanese")]
	[InlineData("Sweden", "Swedish")]
	[InlineData("Barbados", "Barbadian")]
	[InlineData("Peru", "Peruvian")]
	[InlineData("Cheese", "Cheese")] // 🤔
	[InlineData("Portugal", "Portuguese")]
	[InlineData("Eswatini", "Eswati")]
	[InlineData("Azerbaijan", "Azerbaijani")]
	[InlineData("Slovakia", "Slovak")]
	[InlineData("Milan", "Milanese")]
	[InlineData("Oman", "Omani")]
	[InlineData("Bahamas", "Bahamian")]
	[InlineData("Yemen", "Yemeni")]
	[InlineData("Timor", "Timorese")]
	[InlineData("Florence", "Florentine")]
	[InlineData("Philippines", "Philippine")]
	[InlineData("Cameroon", "Cameroonian")]
	[InlineData("Japan", "Japanese")]
	[InlineData("Martinique", "Martinican")]
	[InlineData("Comoros", "Comoran")]
	[InlineData("Jersey", "Jersey")]
	[InlineData("Turkey", "Turkish")]
	[InlineData("Bhutan", "Bhutanese")]
	[InlineData("Hong Kong", "Hong Konger")]
	[InlineData("Paraguay", "Paraguayan")]
	[InlineData("Chad", "Chadian")]
	[InlineData("Nepal", "Nepali")]
	[InlineData("Jordan", "Jordanian")]
	[InlineData("Curaçao", "Curaçaoan")]
	[InlineData("Qatar", "Qatari")]
	[InlineData("Honduras", "Honduran")]
	[InlineData("Palau", "Palauan")]
	[InlineData("Morocco", "Moroccan")]
	[InlineData("Cape Verde", "Cape Verdean")]
	[InlineData("Israel", "Israeli")]
	[InlineData("Jan Mayen", "Jan Mayenese")]
	[InlineData("Maldives", "Maldivian")]
	[InlineData("Benin", "Beninese")]
	[InlineData("Kuwait", "Kuwaiti")]
	[InlineData("Chile", "Chilean")]
	[InlineData("Marshall", "Marshallese")]
	[InlineData("Saint Barthélemy", "Saint Barthélemois")]
	[InlineData("Argentina", "Argentinian")]
	[InlineData("Germany", "German")]
	[InlineData("Faroe", "Faroese")]
	[InlineData("Gabon", "Gabonese")]
	[InlineData("Singapore", "Singaporean")]
	[InlineData("Montenegro", "Montenegrin")]
	[InlineData("Bangladesh", "Bangladeshi")]
	[InlineData("Malta", "Maltese")]
	[InlineData("Niue", "Niuan")]
	[InlineData("Belgium", "Belgian")]
	[InlineData("Kosovo", "Kosovar")]
	[InlineData("Zimbabwe", "Zimbabwean")]
	[InlineData("Belize", "Belizean")]
	[InlineData("Libya", "Libyan")]
	[InlineData("Dortmund", "Dortmunder")]
	[InlineData("Ukraine", "Ukrainian")]
	[InlineData("Luxembourg", "Luxembourgish")]
	[InlineData("Burundi", "Burundian")]
	[InlineData("Brazil", "Brazilian")]
	[InlineData("Congo", "Congolese")]
	[InlineData("Iraq", "Iraqi")]
	[InlineData("Ecuador", "Ecuadorian")]
	[InlineData("Athens", "Athenian")]
	[InlineData("Egypt", "Egyptian")]
	[InlineData("Vanuatu", "Vanuatuan")]
	[InlineData("Essex", "Essexian")]
	[InlineData("Hungary", "Hungarian")]
	[InlineData("Myanik", "Myanikian")]
	[InlineData("Mizdaqahn", "Mizdaqahni")]
	[InlineData("Schech", "Schechite")]
	[InlineData("Ziz", "Zizite")]
	[InlineData("Karamyk", "Karamyk")]
	[InlineData("Sikyōn", "Sikyōnian")]
	[InlineData("Sikyon", "Sikyonian")]
	[InlineData("Vilath", "Vilathian")]
	[InlineData("Kolōnaí", "Kolōnaian")]
	[InlineData("Kolōnai", "Kolōnaian")]
	[InlineData("Zarem", "Zaremite")]
	[InlineData("Achtab", "Achtabite")]
	public void GetAdjectiveGeneratesCorrectishAdjective(string noun, string expectedAdjective) {
		Assert.Equal(expectedAdjective, noun.GetAdjective());
	}

	[Theory]
	[InlineData("Vilath#?!", "Vilathian")]
	[InlineData("Egypt.", "Egyptian")]
	public void GetAdjectiveHandlesStringsWithNonAlphanumericEndings(string noun, string expectedAdjective) {
		Assert.Equal(expectedAdjective, noun.GetAdjective());
	}
	
	[Theory]
	[InlineData("Rome", "Rome")]
	[InlineData("Rome123", "Rome123")]
	[InlineData("Rome###", "Rome")]
	[InlineData("Rome?!", "Rome")]
	[InlineData("Rome¡", "Rome")]
	public void TrimNonAlphanumericEndingReturnsCorrectValue(string str, string expectedValue) {
		Assert.Equal(expectedValue, str.TrimNonAlphanumericEnding());
	}
}