name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test_and_check_coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: "Setup Dotnet for use with actions"
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: 'global.json'

    - name: "Restore tools"
      run: dotnet tool restore

    - name: "Run tests"
      working-directory: commonItems.UnitTests
      shell: pwsh
      run: |
       $env:CoverletOutput='./TestResults/coverage.info'
       $env:CoverletOutputFormat='lcov'
       dotnet test /p:CollectCoverage=true /p:IncludeTestAssembly=true /p:ExcludeByFile=**/Microsoft.NET.Test.Sdk.Program.cs /p:Exclude=[commonItems.UnitTests]*

    - name: "Publish coverage report to coveralls.io"
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: commonItems.UnitTests/TestResults/coverage.info

  test:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: "Setup Dotnet for use with actions"
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: 'global.json'

    - name: "Restore tools"
      run: dotnet tool restore

    - name: "Prevent SSL protocol version exception on macOS"
      if: matrix.os == 'macos-latest'
      run: |
        # enforce TLS 1.3 on macOS
        export MONO_TLS_PROVIDER=btls

    - name: "Run tests"
      working-directory: commonItems.UnitTests
      run: |
        dotnet test
